
https://github.com/Brunty/awesome-checker-services

https://www.vastushastraguru.com/vastu-for-study-table/
https://github.com/DannyDainton/newman-reporter-htmlextra
https://www.google.com/search?q=newman-reporter-html+extra&rlz=1C1GCEU_en-GBIN843IN843&oq=htmlextra+re&aqs=chrome.1.69i57j0l2.7549j0j7&sourceid=chrome&ie=UTF-8



# Java Boilerplate

## selenium-cucumber : Automation Testing Using Java

`selenium-cucumber` is a behavior driven development (BDD) approach to write automation test script to test application.<br />
It enables you to write and execute automated tests.<br />
It is cross-platform, open source and free.<br />

[Reference Material](#selenium-cucumber)

## Contents

1. [Pre-Requisites](#pre-requisites)
    *  [Installation of JAVA :: JDK](#installation-of-java-jdk)
    *  [IDE :: Intellij v/s Eclipse](#ide-intellij-vs-eclipse)
    *  [Setting up Environment variables](#setting-up-environment-variables)

2. [Framework](#framework)
    *  [How to clone framework](#how-to-clone-framework)
    *  [BDD Framework](#bdd-framework)
    *  [Build Tool :: Maven](#build-tool-maven)
    *  [Testing Framewrok :: Junit / TestNG](#testing-framewrok-junit-testng)
    *  [Framework Structure](#framework-structure)
    *  [Execution Steps](#execution-steps)

3. [CI / CD](#ci-cd)

4. [Reference Notes](#reference-notes)

## Pre-requisites
### Installation of JAVA :: JDK

Starting point of this framework is to have JAVA SE Development kit setup in system.<br />
The Java Development Kit (JDK) is one of three core technology packages used in Java programming, along with the JVM (Java Virtual Machine) and the JRE (Java Runtime Environment).<br />
The JDK allows developers to create Java programs that can be executed and run by the JVM and JRE.<br />
Developers new to Java often confuse the Java Development Kit and the Java Runtime Environment.<br />
The distinction is that the JDK is a package of tools for developing Java-based software, whereas the JRE is a package of tools for running Java code.<br />
[Download JAVA](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)

### IDE :: Intellij v/s Eclipse

The main reason why IDEA is steeper is: IDEA feels context. That's what JetBrains employees mean when they name IDEA intelligent.<br />
What it really means? IDEA indexes the project, analyses everything it has, and even builds the syntax tree.<br />
There are n number of factors to understand **_context_** . Below are the few

  * Debugging
  * Autocomplete
  * Refactoring

If we are choosing a Java IDE then Intellij IDEA is definitely better than Eclipse that is according to our understanding.<br />
It's not just a matter of taste. We have opted for `Intellij` as a JAVA IDE

[Reference Material](#intellij-vs-eclipse)

### Setting up Environment variables

We need to carry out setup process for below envrionment variables'

  * JAVA_HOME
  * M2_HOME
  * PATH -- Required for both JAVA and Maven

#### For JAVA :: JAVA_HOME and PATH

**In windows:**

Download **JAVA JDK** from link provided in step [JAVA JDK installation](#installation-of-java-jdk)

1) Downloaded file should be present in __C:\Program Files (x86)\Java__.

2) Setting the path of JAVA in environment Variables: Search the Environment Variable --> Edit the System Environment variables--> Navigate to Advanced tab --> Environment Variables

i) JAVA_HOME : Click New --> Variable Name : JAVA_HOME , Variable Value: C:\Program Files (x86)\Java\jdk1.8.0_201

ii) Edit the 'Path' Environment Variable --> %JAVA_HOME%\bin

Testing whether Java is installed: java -version

[Reference Material](##step-by-step-guide-for-java-environment-variable)

**NOTE : In point ii don't forget to put semicolon(;) before and after.**

#### For MAVEN :: M2_HOME and PATH

**In windows:**

Download the latest version of Maven from [MAVEN](http://maven.apache.org/download.cgi) --> _Download the Binary zip archive._

1) After the download, unzip the folder and copy it to the folder. (Lets say i have copied to c:\program files\apache-maven-3.5.2)

2) Setting the path of Maven in environment Variables: Search the Environment Variable --> Edit the System Environment variables--> Navigate to Advanced tab --> Environment Variables

i) MAVEN_HOME : Click New --> Variable Name : MAVEN_HOME , Variable Value: C:\Program Files\apache-maven-3.5.2

ii) M2_HOME : Click New --> Variable Name : M2_HOME , Variable Value: C:\Program Files\apache-maven-3.5.2

iii) Edit the 'Path' Environment Variable --> %M2_HOME%\bin

Testing whether Maven is installed: mvn -version

[Reference Material](#maven-installation-on-windown-linux-or-mac)

**NOTE : In point iii don't forget to put semicolon(;) before and after.**

## Framework
### How to clone framework

`Java Boilerplate` is placed in [GitLab](https://gitlab.com/pmc-automation-boilerplates/java-boilerplate). Below are steps of cloning framework into system

* You should be able to locate clone option in top right section of project

![Screenshot](https://i.imgur.com/GbyXH9m.png)

* Clone with **SSH**
    * SSH key has to be setup and linked to project for this option, if not kindly refer to
    [SSH Key setup](#step-by-step-guide-for-ssh-key-setup-and-linkage-to-project)
    * After clicking on Clone, two options will get popped
    * Copy URL mentioned below __SSH__ by either copying it from text section or clicking on copy icon placed near by text section
    ![Screenshot](https://i.imgur.com/AN8VFDz.png)
    * Launch Git Bash instance from location in your system, to where you want to place this project and write `git clone <copied value from above step>`
    ![Screenshot](https://i.imgur.com/KPaXATG.png)
    * Navigate back to folder and launch Git Bash from `java-boilerplate` folder
    * Execute command `git branch -a` to locate list of branches of project
    ![Screenshot](https://i.imgur.com/ZDFrZty.png)
    * To clone specific branch perform two commands :: 
        i) `git fetch origin <branchName>`
        ii) `git checkout <branchName>`
    ![Screenshot](https://i.imgur.com/awB3xor.png)

* Clone with **HTTPS**
    * After clicking on Clone, two options will get popped
    * Copy URL mentioned below __HTTPS__ by either copying it from text section or clicking on copy icon placed near by text section 
    ![Screenshot](https://i.imgur.com/BtahezG.png)
    * Launch Git Bash instance from location in your system, to where you want to place this project and write `git clone <copied value from above step>`
    ![Screenshot](https://i.imgur.com/j9ZdlHd.png)
    * Navigate back to folder and launch Git Bash from `java-boilerplate` folder
    * Execute command `git branch -a` to locate list of branches of project
    * To clone specific branch perform two commands :: 
        i) `git fetch origin <branchName>`
        ii) `git checkout <branchName>`

### BDD Framework

What is Behavior-Driven Development? Behavior-driven development, or BDD, is another **agile** software development process that encourages collaboration in a software project between developers, QA, project managers, and the business team.<br />

It enables the technical team and the business team to reach their end goals. In fact, it helps when it comes to defining the desired business outcomes, to communicating what needs to be built by the developer and to understanding what are the technical challenges they might encounter.<br />

**Benefits of Behavior Driven Development** <br />
* Strong collaboration
* High visibility
* The software design follows business value
* The ubiquitous language
* Software development meets user need
* More confidence from the developerâ€™s side
* Lower costs

[Reference Material](#behavior-driven-development)

### Build Tool :: Maven

The build tool is used to set up everything which is required to run your java code independently. This can be applied to your entire java project. It generates source code, compiling code, packaging code to a jar etc. <br />

**Build Life Cycle** <br />
* **clean** -- deletes all artifacts and targets which are created already.
* **compile** -- used to compile the source code of the project.
* **test** -- test the compiled code and these tests do not require to be packaged or deployed.
* **package** -- package is used to convert your project into a jar or war etc.
* **install** -- install the package into the local repository for use of another project.

**Main objectives of maven build tool** <br />
* It makes project build process easy.
* It provides easy and uniform build system.
* It provides quality project document Information.
* Managing project dependencies.
* Provides guild lines for better project management practices.
* Facilitate easy and transparent migration to new features.
* It allows to build project using project object model (POM).
* It downloads required dependency's jar files automatically from Maven central repositories.

Maven can provide benefits for your build process by employing standard conventions and practices to accelerate your development cycle while at the same time helping you achieve a higher rate of success.

[Reference Material](#maven-guide)

### Testing Framewrok :: Junit / TestNG

#### Junit

JUnit is an open source Unit Testing framework. JUnit is a java library for testing source code. JUnit is initially developed by Erich Gamma and Kent Beck. It is an instance of xUnit architecture. As the name implies, it is used for Unit Testing of a small chunk of code.

[Reference Material](#junit-1)

#### TestNG

TestNG is a testing framework which is inspired by JUnit and NUnit; however TestNG introduces some new functionality that makes it more powerful and easier to use. TestNG is designed to cover all categories of tests: unit, functional, end-to-end, integration, etc., and it requires JDK 5 or higher.

_TestNG is a testing framework inspired from JUnit and NUnit, but introducing some new functionalities that make it more powerful and easier to use._

TestNG is an automated testing framework, where NG means Next Generation. TestNG is similar to JUnit but it is not a JUnit extension. TestNG is inspired by JUnit and is designed to be better than JUnit, especially when testing integrated classes.

[Reference Material](#testng-1)

### Framework Structure

![Screenshot](https://i.imgur.com/cENh4bE.png)

### Execution Steps

This framework can be executed by many ways but as best practice we refer to two ways. Same are listed below with few of snapshots (white gap in snapshots denotes that there would be console log in that space)

* Use `mvn clean test` to execute framework -- It will first __clean__ target folder of project and then execute the test
![Screenshot](https://i.imgur.com/Q9Uozqv.png)
* Use `mvn test` to execute framework -- It will directly start executing framework
![Screenshot](https://i.imgur.com/V2mH6dg.png)


## CI / CD

yet to decide

## Reference Notes
#### [selenium-cucumber](https://seleniumcucumber.info/)
#### [Intellij v/s Eclipse](https://dzone.com/articles/why-idea-better-eclipse)
#### [Maven Installation on Windown, Linux or Mac](http://www.baeldung.com/install-maven-on-windows-linux-mac)
#### [Step-by-Step guide for JAVA Environment Variable](http://www.automationtestinghub.com/setup-java-environment-variables/)
#### [Step-by-Step guide for SSH Key setup and linkage to project](https://docs.gitlab.com/ee/ssh/)
#### [Behavior Driven Development](https://www.guru99.com/using-cucumber-selenium.html)
#### [Maven Guide](https://maven.apache.org/guides/getting-started/index.html)
#### [Maven POM reference](https://maven.apache.org/pom.html)
#### [Junit](https://www.guru99.com/junit-tutorial.html)
#### [TestNG](https://www.guru99.com/all-about-testng-and-selenium.html)


OtherREF::https://www.makeareadme.com/

behance.net/sahildave
twitter.com/sahildave1991
medium.com/@sahildave
dribbble.com/sahildave
Warm Regards,
Jigar Soni
https://www.edifice-watches.com/asia-mea/en/






2 tub
1 tooth brush stand
1 soap and itâ€™s stand
1 sandle/slipper
	
PF Details

GJ/65912/511

your pf account is created with UAN no.101443231680


https://unifiedportal-mem.epfindia.gov.in/memberinterface/no-auth/forgotPassword/forgotPasswordMain
101443231680
Jigar.soni10!

Warm Regards,
Jigar Soni










http://innofitt.com/
http://www.aaditehs.com/
Remote WebDriver

Monday ::
Meeting:: ReadMe File 
Automation Weekly Catchup
Work:: Going through Jira Story and Scenarios
Work::Started Scripting on THL
Tuesday ::
Meeting::THL Call
API Automation
Work::Continue with Scripting on THL
Thursday ::
Meeting::
Work::Continue with Scripting on THL
Friday ::
Meeting::THL app catch up
Work::Continue with Scripting on THL
Adding some more scenario
Warm Regards,
Jigar Soni




HipTest 
 
JSON Report 
 
Highlight Element 
 
All the Things in Try-Catch Block 
 
 
Mail  
----------------------------- 
https://medium.com/@ThilinaAshenGamage 
https://medium.com/agile-vision/cucumber-bdd-part-2-creating-a-sample-java-project-with-cucumber-testng-and-maven-127a1053c180 
10.0 Few tutorials links for postman How to create variables: https://www.youtube.com/watch?v=ENNsL-XGLus 
How to get & set local/global/environment variables: https://www.youtube.com/watch?v=OailyIx6vgk  
How to create scripts at collection/folder level: https://www.youtube.com/watch?v=OailyIx6vgk How to read data from json/csv: https://www.youtube.com/watch?v=BzHsDihOlfY 
https://developer.mozilla.org/en-US/docs/Web/HTTP/Status 
  
https://www.udemy.com/javascript-es6-es9-typescript-the-complete-guide/?couponCode=JS_2019  
http://makeseleniumeasy.com/2019/04/09/protractor-tutorial-1-what-is-angularjs-and-angular-applications/  
Explore: 
https://hiptest.com/features/ 
Naveen Srinivasan 
https://blog.testproject.io/category/news-trends/ 
Sikuli 
Linux Desktop Testing Projecthttps://blog.testproject.io/2016/12/22/open-source-test-automation-tools-for-desktop-applications/https://ldtp.freedesktop.org/ldtp-tutorial.pdf 
Business. Founded by serial entrepreneurs Ritesh Arora and Nakul Aggarwal, BrowserStack is the industry's leading cloud web and mobile testing platform, relied upon by developers across the globe.https://www.flickr.com/photos/romainguy/3409068082/ 
https://github.com/browserstack 
https://github.com/browserstack/junit-browserstack 
https://github.com/browserstack/serenity-browserstack/blob/master/src/test/java/com/browserstack/cucumber/ParallelChromeTest.java 
https://www.google.com/search?safe=strict&rlz=1C1GCEU_en-GBIN843IN843&ei=e3rJXLaBKZrBz7sPk8eTqAQ&q=cucumber+javascript+selenium+github&oq=cucumber+javascript+selenium+gi&gs_l=psy-ab.1.0.33i22i29i30l2.100450.103520..104947...0.0..0.172.484.0j3......0....1..gws-wiz.......0i71j0i22i30.Eo9JZAZEADw 
https://www.npmjs.com/package/selenium-cucumber-js 
https://github.com/john-doherty/selenium-cucumber-js 
https://github.com/qmetry/cucumber-javascript-example 
https://github.com/JigarSony/CrossBrowserIntegrationTool-POC/blob/master/src/main/java/browserStackIntegration/BrowserStack.java 
https://hackr.io/blog/10-best-javascript-frameworks-2019 
https://medium.com/javascript-scene/top-javascript-frameworks-and-topics-to-learn-in-2019-b4142f38df20 
https://medium.com/javascript-scene/tagged/learnjs 
https://www.google.com/search?q=protractor+with+cucumber+framework&rlz=1C1GCEU_en-GBIN843IN843&oq=protractor+with+cucumber+&aqs=chrome.1.69i57j0l5.11112j0j1&sourceid=chrome&ie=UTF-8 
https://www.google.com/search?q=selenium+cucumber+javascript+tutorial&rlz=1C1GCEU_en-GBIN843IN843&oq=selenium+cucumber+javascript+&aqs=chrome.0.0j69i60l2j69i57j0l2.13873j1j1&sourceid=chrome&ie=UTF-8 
https://www.youtube.com/watch?v=Lmg8dnGE9g8 
https://www.protractortest.org/#/ 
https://www.protractortest.org/#/tutorial 
 -------------------------------------------------------------------------------- 
https://mvnrepository.com/artifact/com.github.mkolisnyk/cucumber-runner/1.0.8 
 
--------------------------------------- 
https://site.mockito.org/ 
------------------------------- 
Static Block ------------- 
----------------- 
https://study.com/academy/lesson/static-block-vs-constructor-in-java.html 
-------------------------- 
package browserStackIntegration; 
  
public class StaticBlock { 
     
    static StaticBlock sb; 
    public static void main(String[] args) { 
        // TODO Auto-generated method stub 
        System.out.println("Main"); 
        sb = new StaticBlock(); 
        StaticBlock.StaticMeth(); 
         
    } 
  
    static{ 
        System.out.println("I'm In Static Block"); 
    } 
     
    public StaticBlock() { 
        System.out.println("I'm In Constructor"); 
    } 
     
    public static void StaticMeth() { 
        System.out.println("I'm In StaticMeth"); 
    } 
     
} 
------------------------------------------- 
HighLight Element  
----------- 
https://www.softwaretestingmaterial.com/highlight-element-using-selenium/ 
---------------------- 
public static void highLightElement(WebElement ele, String colour) 
    { 
        try 
        { 
            final JavascriptExecutor jse = (JavascriptExecutor)driver; 
            jse.executeScript("arguments[0].setAttribute('style', 'border: 2px solid "+colour+";');", ele); 
        } 
        catch (Exception e) 
        { 
            System.out.println(e.getMessage()); 
        } 
-------- 
highLightElement(element, "red"); 
------------------------------------------------------------------ 
PageLoad Statergy 
-------------------------------- 
https://stackoverflow.com/questions/43734797/page-load-strategy-for-chrome-driver-updated-till-selenium-v3-12-0 
 
System.out.println(" Binary for chrome driver : "+ WebDriverManager.chromedriver().getBinaryPath()); 
ChromeOptions options = new ChromeOptions(); 
options.setPageLoadStrategy(PageLoadStrategy.NONE); 
------------------------------- 
//options.addArguments("--headless", "--disable-gpu", "incognito","--disable-notifications","disable-infobars"); 
-------------------------------------------- 
Wait - https://www.toolsqa.com/selenium-webdriver/wait-commands/ 
--------------- 
https://www.ranorex.com/ 
----------------------------- 
https://blog.testproject.io/2017/02/09/cross-browser-testing-selenium-webdriver/ 
------------------------ 
https://stackoverflow.com/questions/20349844/how-chromedriverservice-is-useful-in-selenium-automation 
-------------------------------- 
https://www.swtestacademy.com/retry-failed-tests-testng-iretryanalyzer/ 
------------------------ 
https://www.toolsqa.com/selenium-webdriver/retry-failed-tests-testng/ 
------------------ 
Log 4j 
------------ 
https://www.mkyong.com/logging/log4j-xml-example/ 
---------------- 
<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd"> 
<log4j:configuration xmlns:log4j='http://jakarta.apache.org/log4j/' 
                     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
                     xsi:schemaLocation="http://jakarta.apache.org/log4j/ "> 
  
    <appender name="consoleAppender" class="org.apache.log4j.ConsoleAppender"> 
        <layout class="org.apache.log4j.PatternLayout"> 
            <!-- For Printing message with date , time & class name also 
            <param name="ConversionPattern" value="%d{dd MMM yyyy HH:mm:ss} %5p %c{1} - %m%n"/> 
            --> 
            <!-- For printing message only --> 
            <param name="ConversionPattern" value="%-5p[%c{1}]: %m%n"/> 
        </layout> 
    </appender> 
    <appender name="fileAppender" class="org.apache.log4j.RollingFileAppender"> 
        <param name="append" value="false"/> 
        <param name="file" value="logs/project.log"/> 
        <layout class="org.apache.log4j.PatternLayout"> 
            <param name="ConversionPattern" value="%d{dd-MM-yyyy HH:mm:ss}%x %-5p[%c{1}]: %m%n"/> 
        </layout> 
    </appender> 
    <root> 
        <level value="INFO"/> 
        <appender-ref ref="consoleAppender"/> 
        <appender-ref ref="fileAppender"/> 
    </root> 
</log4j:configuration>------------------ 
----------------------- 
https://thenavpeople.com/news/bc-rhapsody 
--------------- 
 
 Report 
-------------- 
https://github.com/extent-framework/extentreports-cucumber4-adapter 
 
---------------. 
https://www.qaautomation.co.in/2018/10/cucumber-advance-reporting-net-master.html 
 
-------------------- 
https://github.com/jembi/auto-test-cucumber-framework 
--------------------- 
https://www.google.com/search?q=best+cucumber+java+framework+git&rlz=1C1GCEU_en-GBIN843IN843&oq=best+cucumber+java+&aqs=chrome.1.69i57j35i39l2j0l2.8552j1j1&sourceid=chrome&ie=UTF-8 
=============== 
https://github.com/topics/cucumber-framework 
----------------- 
 


https://www.linkedin.com/pulse/lets-create-our-own-protractor-test-automation-from-kushan-shalindra

https://www.linkedin.com/pulse/creating-your-own-python-selenium-framework-kushan-shalindra

-------------------------------


